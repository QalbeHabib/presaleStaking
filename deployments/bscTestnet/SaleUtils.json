{
  "address": "0x23A92400A88B1F849D315471c2a3F1FDB311774d",
  "abi": [],
  "transactionHash": "0x3283e3ddaa1d96467905c8d282cb209553964a734638290d891dd57191d94e36",
  "receipt": {
    "to": null,
    "from": "0x0E816E3E3a08dA027ED0f5D74965CCE3b43a1C8d",
    "contractAddress": "0x23A92400A88B1F849D315471c2a3F1FDB311774d",
    "transactionIndex": 0,
    "gasUsed": "72227",
    "logsBloom": "0x
    "blockHash": "0xde1fb182fe17570feb0b5c81eb6f2ea7066afbd8a5787b636feeff344db4e050",
    "transactionHash": "0x3283e3ddaa1d96467905c8d282cb209553964a734638290d891dd57191d94e36",
    "logs": [],
    "blockNumber": 51745828,
    "cumulativeGasUsed": "72227",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "1551b786b646bd9a238f83723fcbc09f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Sale Utilities Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions used across the presale system\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SaleUtils.sol\":\"SaleUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SaleUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title Sale Utilities Library\\n * @notice Utility functions used across the presale system\\n */\\nlibrary SaleUtils {\\n    /**\\n     * @dev Helper to check if an address is a contract\\n     * @param _addr Address to check\\n     * @return True if the address is a contract\\n     */\\n    function isContract(address _addr) internal view returns (bool) {\\n        uint32 size;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return (size > 0);\\n    }\\n\\n    /**\\n     * @dev Helper function to send ETH safely\\n     * @param recipient Address to send ETH to\\n     * @param amount Amount of ETH to send\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Low balance\\\");\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"ETH Payment failed\\\");\\n    }\\n} \",\"keccak256\":\"0x590d61f2705834edd7d3d494b79497a61a509f12f4fb37b5b49aea51ec04aedc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdb010b79ad171d806c0f344d2a77afa52de6df4a92035899c2c445f6c366ef164736f6c63430008140033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdb010b79ad171d806c0f344d2a77afa52de6df4a92035899c2c445f6c366ef164736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "Sale Utilities Library",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Utility functions used across the presale system",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}